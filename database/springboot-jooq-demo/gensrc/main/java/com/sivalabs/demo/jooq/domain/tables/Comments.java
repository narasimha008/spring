/**
 * This class is generated by jOOQ
 */
package com.sivalabs.demo.jooq.domain.tables;


import com.sivalabs.demo.jooq.domain.Keys;
import com.sivalabs.demo.jooq.domain.Public;
import com.sivalabs.demo.jooq.domain.tables.records.CommentsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Comments extends TableImpl<CommentsRecord> {

	private static final long serialVersionUID = -293773447;

	/**
	 * The reference instance of <code>PUBLIC.COMMENTS</code>
	 */
	public static final Comments COMMENTS = new Comments();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CommentsRecord> getRecordType() {
		return CommentsRecord.class;
	}

	/**
	 * The column <code>PUBLIC.COMMENTS.ID</code>.
	 */
	public final TableField<CommentsRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>PUBLIC.COMMENTS.POST_ID</code>.
	 */
	public final TableField<CommentsRecord, Integer> POST_ID = createField("POST_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.COMMENTS.NAME</code>.
	 */
	public final TableField<CommentsRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.COMMENTS.EMAIL</code>.
	 */
	public final TableField<CommentsRecord, String> EMAIL = createField("EMAIL", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.COMMENTS.CONTENT</code>.
	 */
	public final TableField<CommentsRecord, String> CONTENT = createField("CONTENT", org.jooq.impl.SQLDataType.CLOB.defaulted(true), this, "");

	/**
	 * The column <code>PUBLIC.COMMENTS.CREATED_ON</code>.
	 */
	public final TableField<CommentsRecord, Timestamp> CREATED_ON = createField("CREATED_ON", org.jooq.impl.SQLDataType.TIMESTAMP.defaulted(true), this, "");

	/**
	 * Create a <code>PUBLIC.COMMENTS</code> table reference
	 */
	public Comments() {
		this("COMMENTS", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.COMMENTS</code> table reference
	 */
	public Comments(String alias) {
		this(alias, COMMENTS);
	}

	private Comments(String alias, Table<CommentsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Comments(String alias, Table<CommentsRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CommentsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_COMMENTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CommentsRecord> getPrimaryKey() {
		return Keys.CONSTRAINT_A;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CommentsRecord>> getKeys() {
		return Arrays.<UniqueKey<CommentsRecord>>asList(Keys.CONSTRAINT_A);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<CommentsRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<CommentsRecord, ?>>asList(Keys.CONSTRAINT_AB);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Comments as(String alias) {
		return new Comments(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Comments rename(String name) {
		return new Comments(name, null);
	}
}
